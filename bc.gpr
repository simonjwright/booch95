--  Copyright Simon Wright <simon@pushface.org>

--  This package is free software; you can redistribute it and/or
--  modify it under terms of the GNU General Public License as
--  published by the Free Software Foundation; either version 2, or
--  (at your option) any later version. This package is distributed in
--  the hope that it will be useful, but WITHOUT ANY WARRANTY; without
--  even the implied warranty of MERCHANTABILITY or FITNESS FOR A
--  PARTICULAR PURPOSE. See the GNU General Public License for more
--  details. You should have received a copy of the GNU General Public
--  License distributed with this package; see file COPYING.  If not,
--  write to the Free Software Foundation, 59 Temple Place - Suite
--  330, Boston, MA 02111-1307, USA.

project BC is

   type Language is ("gnat95", "gnat05", "gnat12");
   Chosen_Language : Language := external ("LANGUAGE", "gnat95");

   type Library_T is ("static", "relocatable");
   Library_Type : Library_T := external ("LIBRARY_TYPE", "static");

   Sources :=
     (
      "bc-containers-bags-bounded.adb",
      "bc-containers-bags-bounded.ads",
      "bc-containers-bags-dynamic.adb",
      "bc-containers-bags-dynamic.ads",
      "bc-containers-bags-unbounded.adb",
      "bc-containers-bags-unbounded.ads",
      "bc-containers-bags-unmanaged.adb",
      "bc-containers-bags-unmanaged.ads",
      "bc-containers-bags.adb",
      "bc-containers-bags.ads",
      "bc-containers-collections-bounded.adb",
      "bc-containers-collections-bounded.ads",
      "bc-containers-collections-dynamic.adb",
      "bc-containers-collections-dynamic.ads",
      "bc-containers-collections-ordered-bounded.adb",
      "bc-containers-collections-ordered-bounded.ads",
      "bc-containers-collections-ordered-dynamic.adb",
      "bc-containers-collections-ordered-dynamic.ads",
      "bc-containers-collections-ordered-unbounded.adb",
      "bc-containers-collections-ordered-unbounded.ads",
      "bc-containers-collections-ordered-unmanaged.adb",
      "bc-containers-collections-ordered-unmanaged.ads",
      "bc-containers-collections-ordered.ads",
      "bc-containers-collections-unbounded.adb",
      "bc-containers-collections-unbounded.ads",
      "bc-containers-collections-unmanaged.adb",
      "bc-containers-collections-unmanaged.ads",
      "bc-containers-collections.adb",
      "bc-containers-collections.ads",
      "bc-containers-deques-bounded.adb",
      "bc-containers-deques-bounded.ads",
      "bc-containers-deques-dynamic.adb",
      "bc-containers-deques-dynamic.ads",
      "bc-containers-deques-unbounded.adb",
      "bc-containers-deques-unbounded.ads",
      "bc-containers-deques-unmanaged.adb",
      "bc-containers-deques-unmanaged.ads",
      "bc-containers-deques.adb",
      "bc-containers-deques.ads",
      "bc-containers-lists-double.adb",
      "bc-containers-lists-double.ads",
      "bc-containers-lists-single.adb",
      "bc-containers-lists-single.ads",
      "bc-containers-lists.ads",
      "bc-containers-maps-bounded.adb",
      "bc-containers-maps-bounded.ads",
      "bc-containers-maps-dynamic.adb",
      "bc-containers-maps-dynamic.ads",
      "bc-containers-maps-unbounded.adb",
      "bc-containers-maps-unbounded.ads",
      "bc-containers-maps-unmanaged.adb",
      "bc-containers-maps-unmanaged.ads",
      "bc-containers-maps.adb",
      "bc-containers-maps.ads",
      "bc-containers-queues-bounded.adb",
      "bc-containers-queues-bounded.ads",
      "bc-containers-queues-dynamic.adb",
      "bc-containers-queues-dynamic.ads",
      "bc-containers-queues-ordered-bounded.adb",
      "bc-containers-queues-ordered-bounded.ads",
      "bc-containers-queues-ordered-dynamic.adb",
      "bc-containers-queues-ordered-dynamic.ads",
      "bc-containers-queues-ordered-unbounded.adb",
      "bc-containers-queues-ordered-unbounded.ads",
      "bc-containers-queues-ordered-unmanaged.adb",
      "bc-containers-queues-ordered-unmanaged.ads",
      "bc-containers-queues-ordered.ads",
      "bc-containers-queues-unbounded.adb",
      "bc-containers-queues-unbounded.ads",
      "bc-containers-queues-unmanaged.adb",
      "bc-containers-queues-unmanaged.ads",
      "bc-containers-queues.adb",
      "bc-containers-queues.ads",
      "bc-containers-quicksort.adb",
      "bc-containers-quicksort.ads",
      "bc-containers-rings-bounded.adb",
      "bc-containers-rings-bounded.ads",
      "bc-containers-rings-dynamic.adb",
      "bc-containers-rings-dynamic.ads",
      "bc-containers-rings-unbounded.adb",
      "bc-containers-rings-unbounded.ads",
      "bc-containers-rings-unmanaged.adb",
      "bc-containers-rings-unmanaged.ads",
      "bc-containers-rings.adb",
      "bc-containers-rings.ads",
      "bc-containers-sets-bounded.adb",
      "bc-containers-sets-bounded.ads",
      "bc-containers-sets-dynamic.adb",
      "bc-containers-sets-dynamic.ads",
      "bc-containers-sets-unbounded.adb",
      "bc-containers-sets-unbounded.ads",
      "bc-containers-sets-unmanaged.adb",
      "bc-containers-sets-unmanaged.ads",
      "bc-containers-sets.adb",
      "bc-containers-sets.ads",
      "bc-containers-shellsort.adb",
      "bc-containers-shellsort.ads",
      "bc-containers-stacks-bounded.adb",
      "bc-containers-stacks-bounded.ads",
      "bc-containers-stacks-dynamic.adb",
      "bc-containers-stacks-dynamic.ads",
      "bc-containers-stacks-unbounded.adb",
      "bc-containers-stacks-unbounded.ads",
      "bc-containers-stacks-unmanaged.adb",
      "bc-containers-stacks-unmanaged.ads",
      "bc-containers-stacks.adb",
      "bc-containers-stacks.ads",
      "bc-containers-trees-avl-print.adb",
      "bc-containers-trees-avl-print.ads",
      "bc-containers-trees-avl-validate.adb",
      "bc-containers-trees-avl-validate.ads",
      "bc-containers-trees-avl.adb",
      "bc-containers-trees-avl.ads",
      "bc-containers-trees-binary-in_order.adb",
      "bc-containers-trees-binary-in_order.ads",
      "bc-containers-trees-binary-post_order.adb",
      "bc-containers-trees-binary-post_order.ads",
      "bc-containers-trees-binary-pre_order.adb",
      "bc-containers-trees-binary-pre_order.ads",
      "bc-containers-trees-binary.adb",
      "bc-containers-trees-binary.ads",
      "bc-containers-trees-multiway-post_order.adb",
      "bc-containers-trees-multiway-post_order.ads",
      "bc-containers-trees-multiway-pre_order.adb",
      "bc-containers-trees-multiway-pre_order.ads",
      "bc-containers-trees-multiway.adb",
      "bc-containers-trees-multiway.ads",
      "bc-containers-trees.ads",
      "bc-containers.adb",
      "bc-containers.ads",
      "bc-copy.adb",
      "bc-copy.ads",
      "bc-filter.adb",
      "bc-filter.ads",
      "bc-graphs-directed.adb",
      "bc-graphs-directed.ads",
      "bc-graphs-undirected.adb",
      "bc-graphs-undirected.ads",
      "bc-graphs.adb",
      "bc-graphs.ads",
      "bc-indefinite_containers-collections-bounded.adb",
      "bc-indefinite_containers-collections-bounded.ads",
      "bc-indefinite_containers-collections-ordered-bounded.adb",
      "bc-indefinite_containers-collections-ordered-bounded.ads",
      "bc-indefinite_containers-collections-ordered-unbounded.adb",
      "bc-indefinite_containers-collections-ordered-unbounded.ads",
      "bc-indefinite_containers-collections-ordered.ads",
      "bc-indefinite_containers-collections-unbounded.adb",
      "bc-indefinite_containers-collections-unbounded.ads",
      "bc-indefinite_containers-collections.adb",
      "bc-indefinite_containers-collections.ads",
      "bc-indefinite_containers-maps-bounded.adb",
      "bc-indefinite_containers-maps-bounded.ads",
      "bc-indefinite_containers-maps-unbounded.adb",
      "bc-indefinite_containers-maps-unbounded.ads",
      "bc-indefinite_containers-maps.adb",
      "bc-indefinite_containers-maps.ads",
      "bc-indefinite_containers-queues-bounded.adb",
      "bc-indefinite_containers-queues-bounded.ads",
      "bc-indefinite_containers-queues-ordered-bounded.adb",
      "bc-indefinite_containers-queues-ordered-bounded.ads",
      "bc-indefinite_containers-queues-ordered-unbounded.adb",
      "bc-indefinite_containers-queues-ordered-unbounded.ads",
      "bc-indefinite_containers-queues-ordered.ads",
      "bc-indefinite_containers-queues-unbounded.adb",
      "bc-indefinite_containers-queues-unbounded.ads",
      "bc-indefinite_containers-queues.adb",
      "bc-indefinite_containers-queues.ads",
      "bc-indefinite_containers.adb",
      "bc-indefinite_containers.ads",
      "bc-indefinite_unmanaged_containers-collections-ordered.adb",
      "bc-indefinite_unmanaged_containers-collections-ordered.ads",
      "bc-indefinite_unmanaged_containers-collections.adb",
      "bc-indefinite_unmanaged_containers-collections.ads",
      "bc-indefinite_unmanaged_containers-maps.adb",
      "bc-indefinite_unmanaged_containers-maps.ads",
      "bc-indefinite_unmanaged_containers-queues-ordered.adb",
      "bc-indefinite_unmanaged_containers-queues-ordered.ads",
      "bc-indefinite_unmanaged_containers-queues.adb",
      "bc-indefinite_unmanaged_containers-queues.ads",
      "bc-indefinite_unmanaged_containers.adb",
      "bc-indefinite_unmanaged_containers.ads",
      "bc-lists-double.adb",
      "bc-lists-double.ads",
      "bc-lists-single.adb",
      "bc-lists-single.ads",
      "bc-lists.adb",
      "bc-lists.ads",
      "bc-simple_collections.adb",
      "bc-simple_collections.ads",
      "bc-support-auto_pointers.adb",
      "bc-support-auto_pointers.ads",
      "bc-support-avl_trees.adb",
      "bc-support-avl_trees.ads",
      "bc-support-bounded.adb",
      "bc-support-bounded.ads",
      "bc-support-bounded_hash_tables.adb",
      "bc-support-bounded_hash_tables.ads",
      "bc-support-dynamic.adb",
      "bc-support-dynamic.ads",
      "bc-support-exceptions.adb",
      "bc-support-exceptions.ads",
      "bc-support-hash_tables.adb",
      "bc-support-hash_tables.ads",
      "bc-support-high_resolution_time-clock.adb",
      "bc-support-high_resolution_time.adb",
      "bc-support-high_resolution_time.ads",
      "bc-support-indefinite_bounded.adb",
      "bc-support-indefinite_bounded.ads",
      "bc-support-indefinite_bounded_hash_tables.adb",
      "bc-support-indefinite_bounded_hash_tables.ads",
      "bc-support-indefinite_hash_tables.adb",
      "bc-support-indefinite_hash_tables.ads",
      "bc-support-indefinite_reference.adb",
      "bc-support-indefinite_reference.ads",
      "bc-support-indefinite_unbounded.adb",
      "bc-support-indefinite_unbounded.ads",
      "bc-support-indefinite_unmanaged.adb",
      "bc-support-indefinite_unmanaged.ads",
      "bc-support-managed_storage.adb",
      "bc-support-managed_storage.ads",
      "bc-support-memory_streams.adb",
      "bc-support-memory_streams.ads",
      "bc-support-smart_pointers.adb",
      "bc-support-smart_pointers.ads",
      "bc-support-standard_storage.ads",
      "bc-support-statistics.adb",
      "bc-support-statistics.ads",
      "bc-support-synchronization-debug.adb",
      "bc-support-synchronization-debug.ads",
      "bc-support-synchronization.adb",
      "bc-support-synchronization.ads",
      "bc-support-unbounded.adb",
      "bc-support-unbounded.ads",
      "bc-support-unmanaged.adb",
      "bc-support-unmanaged.ads",
      "bc-support-unmanaged_storage.adb",
      "bc-support-unmanaged_storage.ads",
      "bc-support.ads",
      "bc-trees-avl_trees-iterators.adb",
      "bc-trees-avl_trees-iterators.ads",
      "bc-trees-avl_trees-print.adb",
      "bc-trees-avl_trees-print.ads",
      "bc-trees-avl_trees-validate.adb",
      "bc-trees-avl_trees-validate.ads",
      "bc-trees-avl_trees.adb",
      "bc-trees-avl_trees.ads",
      "bc-trees-binary_trees-in_order.adb",
      "bc-trees-binary_trees-in_order.ads",
      "bc-trees-binary_trees-post_order.adb",
      "bc-trees-binary_trees-post_order.ads",
      "bc-trees-binary_trees-pre_order.adb",
      "bc-trees-binary_trees-pre_order.ads",
      "bc-trees-binary_trees.adb",
      "bc-trees-binary_trees.ads",
      "bc-trees-multiway_trees-post_order.adb",
      "bc-trees-multiway_trees-post_order.ads",
      "bc-trees-multiway_trees-pre_order.adb",
      "bc-trees-multiway_trees-pre_order.ads",
      "bc-trees-multiway_trees.adb",
      "bc-trees-multiway_trees.ads",
      "bc-trees.ads",
      "bc.ads"
     );

   Source_Units :=
     (
      "BC.Containers.Bags.Bounded",
      "BC.Containers.Bags.Dynamic",
      "BC.Containers.Bags.Unbounded",
      "BC.Containers.Bags.Unmanaged",
      "BC.Containers.Bags",
      "BC.Containers.Collections.Bounded",
      "BC.Containers.Collections.Dynamic",
      "BC.Containers.Collections.Ordered.Bounded",
      "BC.Containers.Collections.Ordered.Dynamic",
      "BC.Containers.Collections.Ordered.Unbounded",
      "BC.Containers.Collections.Ordered.Unmanaged",
      "BC.Containers.Collections.Ordered",
      "BC.Containers.Collections.Unbounded",
      "BC.Containers.Collections.Unmanaged",
      "BC.Containers.Collections",
      "BC.Containers.Deques.Bounded",
      "BC.Containers.Deques.Dynamic",
      "BC.Containers.Deques.Unbounded",
      "BC.Containers.Deques.Unmanaged",
      "BC.Containers.Deques",
      "BC.Containers.Lists.Double",
      "BC.Containers.Lists.Single",
      "BC.Containers.Lists",
      "BC.Containers.Maps.Bounded",
      "BC.Containers.Maps.Dynamic",
      "BC.Containers.Maps.Unbounded",
      "BC.Containers.Maps.Unmanaged",
      "BC.Containers.Maps",
      "BC.Containers.Queues.Bounded",
      "BC.Containers.Queues.Dynamic",
      "BC.Containers.Queues.Ordered.Bounded",
      "BC.Containers.Queues.Ordered.Dynamic",
      "BC.Containers.Queues.Ordered.Unbounded",
      "BC.Containers.Queues.Ordered.Unmanaged",
      "BC.Containers.Queues.Ordered",
      "BC.Containers.Queues.Unbounded",
      "BC.Containers.Queues.Unmanaged",
      "BC.Containers.Queues",
      "BC.Containers.Quicksort",
      "BC.Containers.Rings.Bounded",
      "BC.Containers.Rings.Dynamic",
      "BC.Containers.Rings.Unbounded",
      "BC.Containers.Rings.Unmanaged",
      "BC.Containers.Rings",
      "BC.Containers.Sets.Bounded",
      "BC.Containers.Sets.Dynamic",
      "BC.Containers.Sets.Unbounded",
      "BC.Containers.Sets.Unmanaged",
      "BC.Containers.Sets",
      "BC.Containers.Shellsort",
      "BC.Containers.Stacks.Bounded",
      "BC.Containers.Stacks.Dynamic",
      "BC.Containers.Stacks.Unbounded",
      "BC.Containers.Stacks.Unmanaged",
      "BC.Containers.Stacks",
      "BC.Containers.Trees.AVL.Print",
      "BC.Containers.Trees.AVL.Validate",
      "BC.Containers.Trees.AVL",
      "BC.Containers.Trees.Binary.In_Order",
      "BC.Containers.Trees.Binary.Post_Order",
      "BC.Containers.Trees.Binary.Pre_Order",
      "BC.Containers.Trees.Binary",
      "BC.Containers.Trees.Multiway.Post_Order",
      "BC.Containers.Trees.Multiway.Pre_Order",
      "BC.Containers.Trees.Multiway",
      "BC.Containers.Trees",
      "BC.Containers",
      "BC.Copy",
      "BC.Filter",
      "BC.Graphs.Directed",
      "BC.Graphs.Undirected",
      "BC.Graphs",
      "BC.Indefinite_Containers.Collections.Bounded",
      "BC.Indefinite_Containers.Collections.Ordered.Bounded",
      "BC.Indefinite_Containers.Collections.Ordered.Unbounded",
      "BC.Indefinite_Containers.Collections.Ordered",
      "BC.Indefinite_Containers.Collections.Unbounded",
      "BC.Indefinite_Containers.Collections",
      "BC.Indefinite_Containers.Maps.Bounded",
      "BC.Indefinite_Containers.Maps.Unbounded",
      "BC.Indefinite_Containers.Maps",
      "BC.Indefinite_Containers.Queues.Bounded",
      "BC.Indefinite_Containers.Queues.Ordered.Bounded",
      "BC.Indefinite_Containers.Queues.Ordered.Unbounded",
      "BC.Indefinite_Containers.Queues.Ordered",
      "BC.Indefinite_Containers.Queues.Unbounded",
      "BC.Indefinite_Containers.Queues",
      "BC.Indefinite_Containers",
      "BC.Indefinite_Unmanaged_Containers.Collections.Ordered",
      "BC.Indefinite_Unmanaged_Containers.Collections",
      "BC.Indefinite_Unmanaged_Containers.Maps",
      "BC.Indefinite_Unmanaged_Containers.Queues.Ordered",
      "BC.Indefinite_Unmanaged_Containers.Queues",
      "BC.Indefinite_Unmanaged_Containers",
      "BC.Lists.Double",
      "BC.Lists.Single",
      "BC.Lists",
      "BC.Simple_Collections",
      "BC.Support.Auto_Pointers",
      "BC.Support.AVL_Trees",
      "BC.Support.Bounded",
      "BC.Support.Bounded_Hash_Tables",
      "BC.Support.Dynamic",
      "BC.Support.Exceptions",
      "BC.Support.Hash_Tables",
      "BC.Support.High_Resolution_Time",
      "BC.Support.Indefinite_Bounded",
      "BC.Support.Indefinite_Bounded_Hash_Tables",
      "BC.Support.Indefinite_Hash_Tables",
      "BC.Support.Indefinite_Reference",
      "BC.Support.Indefinite_Unbounded",
      "BC.Support.Indefinite_Unmanaged",
      "BC.Support.Managed_Storage",
      "BC.Support.Memory_Streams",
      "BC.Support.Smart_Pointers",
      "BC.Support.Standard_Storage",
      "BC.Support.Statistics",
      "BC.Support.Synchronization.Debug",
      "BC.Support.Synchronization",
      "BC.Support.Unbounded",
      "BC.Support.Unmanaged",
      "BC.Support.Unmanaged_Storage",
      "BC.Support",
      "BC.Trees.AVL_Trees.Iterators",
      "BC.Trees.AVL_Trees.Print",
      "BC.Trees.AVL_Trees.Validate",
      "BC.Trees.AVL_Trees",
      "BC.Trees.Binary_Trees.In_Order",
      "BC.Trees.Binary_Trees.Post_Order",
      "BC.Trees.Binary_Trees.Pre_Order",
      "BC.Trees.Binary_Trees",
      "BC.Trees.Multiway_Trees.Post_Order",
      "BC.Trees.Multiway_Trees.Pre_Order",
      "BC.Trees.Multiway_Trees",
      "BC.Trees",
      "BC"
     );

   for Library_Name use "bc";
   for Library_Kind use Library_Type;
   for Library_Dir use "./lib-" & Library_Type;
   case Library_Type is
      when "relocatable" =>
         for Library_Src_Dir use "./include";
         for Library_Interface use Source_Units;
      when "static" =>
         --  Neither gnatmake nor gprbuild handles this case
         --  properly. Rely on the relocatable build to copy the
         --  required interface units to ./include.
         null;
   end case;
   for Library_Options use External_As_List ("LDFLAGS", " ");

   for Languages use ("ada");

   for Source_Dirs use ("src");
   for Source_Files use Sources;

   for Object_Dir use ".build-" & Library_Type;

   package Compiler is
      for Default_Switches ("Ada") use
        (
         "-" & Chosen_Language,
         "-g",       --  for debug symbols
         "-O2",      --  standard optimisation
         "-gnatqQ",  --  to keep ALI files even if there are compilation errors
         "-gnatafo", --  assertions, full reports, integer overflow
         "-gnaty",   --  standard style checks
         "-gnatwaL"  --  all standard warnings except for elaboration
        );
   end Compiler;

end BC;
